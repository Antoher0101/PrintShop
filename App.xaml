<Application x:Class="CardFilePBX.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CardFilePBX"
             StartupUri="MainWindow.xaml">
	<Application.Resources>
		<!-- TabItem styling -->
		<Style TargetType="TabItem">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TabItem">
						<Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
							<ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="Border" Property="Background" Value="GhostWhite" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

		</Style>

		<!-- Textbox styling -->
		<Style x:Key="TextBox" TargetType="{x:Type TextBox}">
			<Setter Property="SnapsToDevicePixels"
          Value="True" />
			<Setter Property="OverridesDefaultStyle"
          Value="True" />
			<Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
			<Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
			<Setter Property="MinWidth"
          Value="130" />
			<Setter Property="MinHeight"
          Value="30" />
			<Setter Property="AllowDrop"
          Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBoxBase}">
						<Border Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="1">
							<Border.Background>
								<SolidColorBrush Color="White" />

							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush Color="LightSkyBlue" />
							</Border.BorderBrush>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="LightGray" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ReadOnly">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="LightCyan" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Red bordered TextBox-->
		<Style x:Key="RedTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="SnapsToDevicePixels"
          Value="True" />
			<Setter Property="OverridesDefaultStyle"
          Value="True" />
			<Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
			<Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
			<Setter Property="MinWidth"
          Value="130" />
			<Setter Property="MinHeight"
          Value="30" />
			<Setter Property="AllowDrop"
          Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBoxBase}">
						<Border Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="1">
							<Border.Background>
								<SolidColorBrush Color="White" />

							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush Color="#f73d52" />
							</Border.BorderBrush>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="LightGray" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ReadOnly">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="LightCyan" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Button -->
		<Style TargetType="{x:Type Button}">
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="MinHeight" Value="35"/>
			<Setter Property="Background" >
				<Setter.Value>
					<SolidColorBrush Opacity="1" Color="White" />
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" >
				<Setter.Value>
					<SolidColorBrush Opacity="1" Color="LightSkyBlue" />
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">

						<Border  x:Name="Border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         Padding="4,2"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         CornerRadius="3"
                         Background="{TemplateBinding Background}">
							<Grid>
								<ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True" />

							</Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.5" />
										<VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
									</VisualStateGroup.Transitions>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>

					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Cursor" Value="Hand"/>
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation To="#94dbff"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation To="#7ac1ed"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation To="LightCyan"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.02" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation To="#1c2329"
								                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
								                FillBehavior="HoldEnd" Duration="0:0:0.02" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation To="#7ac1ed"
								                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
								                FillBehavior="HoldEnd" Duration="0:0:0.02" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation
									Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
									FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation
									Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" 
									FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation
									Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
									FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Red button -->
		<Style TargetType="{x:Type Button}" x:Key="RedButton">
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="MinHeight" Value="35"/>
			<Setter Property="Background" >
				<Setter.Value>
					<SolidColorBrush Opacity="1" Color="White" />
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" >
				<Setter.Value>
					<SolidColorBrush Opacity="1" Color="#f73d52" />
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">

						<Border  x:Name="Border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         Padding="4,2"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         CornerRadius="3"
                         Background="{TemplateBinding Background}">
							<Grid>
								<ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True" />

							</Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.5" />
										<VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
									</VisualStateGroup.Transitions>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>

					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Cursor" Value="Hand"/>
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation To="#fa8794"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
				<Trigger Property="IsPressed" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation To="#f73d52"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation To="#ffe2e0"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.02" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation To="#1c2329"
								                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
								                FillBehavior="HoldEnd" Duration="0:0:0.02" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation To="#f73d52"
								                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
								                FillBehavior="HoldEnd" Duration="0:0:0.02" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimation
									Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
									FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation
									Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" 
									FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
								<ColorAnimation
									Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
									FillBehavior="HoldEnd" Duration="0:0:0.05" AutoReverse="False" RepeatBehavior="1x"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- ComboBox -->
		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="White"
                  BorderBrush="LightSkyBlue"
                  BorderThickness="1" />
				<Border x:Name="Field"
                  Grid.Column="0"
                  CornerRadius="2 0 0 2" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="LightSkyBlue"
                  BorderThickness="0,0,1,0" />
				<Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="LightSkyBlue"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="ToggleButton.IsMouseOver" Value="true">
					<Setter TargetName="Border" Property="Background" Value="#94dbff" />
					<Setter Property="Cursor" Value="Hand"/>
					<Setter TargetName="Arrow" Property="Fill" Value="GhostWhite"/>
				</Trigger>
				<Trigger Property="ToggleButton.IsChecked" Value="true">
					<Setter TargetName="Arrow" Property="Fill" Value="White"/>
					<Setter TargetName="Border" Property="Background" Value="#7ac1ed" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="Border" Property="Background" Value="LightCyan" />
					<Setter TargetName="Border" Property="BorderBrush" Value="LightSkyBlue" />
					<Setter Property="Foreground" Value="#FF000000"/>
					<Setter TargetName="Field" Property="Background" Value="LightCyan"/>
					<Setter TargetName="Arrow" Property="Fill" Value="#7ac1ed" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>

		<Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="MinWidth" Value="130"/>
			<Setter Property="MinHeight" Value="30"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
							</ToggleButton>
							<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5,0,23,1"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
							<TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="5,0,23,1"
                            Focusable="True" 
                            Background="White"
                            Foreground="#FF000000"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
							<Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

								<Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border 
                                x:Name="DropDownBorder"
                                Background="White"

                                BorderThickness="1"
                                BorderBrush="LightSkyBlue"/>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter TargetName="DropDown" Property="IsEnabled" Value="False"/>
								<Setter TargetName="DropDownBorder" Property="Background" Value="LightCyan"/>
								<Setter Property="Background" Value="LightCyan"/>

								<Setter TargetName="ToggleButton" Property="IsEnabled" Value="False"></Setter>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2"/>
							</Trigger>
							<Trigger Property="IsEditable"  Value="true">
								<Setter Property="IsTabStop" Value="false"/>
								<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
								<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- SimpleStyles: ComboBoxItem -->
		<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
							<ContentPresenter />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="True">
								<Setter TargetName="Border" Property="Background" Value="LightSkyBlue"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#7ac1ed"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="#FF000000"/>
								<Setter TargetName="Border" Property="Background" Value="LightCyan"></Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Red ComboBox -->
		<ControlTemplate x:Key="RedComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="White"
                  BorderBrush="#f73d52"
                  BorderThickness="1" />
				<Border x:Name="Field"
                  Grid.Column="0"
                  CornerRadius="2 0 0 2" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="#f73d52"
                  BorderThickness="0,0,1,0" />
				<Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="#f73d52"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="ToggleButton.IsMouseOver" Value="true">
					<Setter TargetName="Border" Property="Background" Value="#94dbff" />
					<Setter Property="Cursor" Value="Hand"/>
					<Setter TargetName="Arrow" Property="Fill" Value="GhostWhite"/>
				</Trigger>
				<Trigger Property="ToggleButton.IsChecked" Value="true">
					<Setter TargetName="Arrow" Property="Fill" Value="White"/>
					<Setter TargetName="Border" Property="Background" Value="#7ac1ed" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="Border" Property="Background" Value="LightCyan" />
					<Setter TargetName="Border" Property="BorderBrush" Value="LightSkyBlue" />
					<Setter Property="Foreground" Value="#FF000000"/>
					<Setter TargetName="Field" Property="Background" Value="LightCyan"/>
					<Setter TargetName="Arrow" Property="Fill" Value="#7ac1ed" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<Style x:Key="RedComboBox" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="MinWidth" Value="130"/>
			<Setter Property="MinHeight" Value="30"/>
			<Setter Property="Foreground" Value="#FF000000"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource RedComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
							</ToggleButton>
							<ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="5,0,23,1"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
							<TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="5,0,23,1"
                            Focusable="True" 
                            Background="White"
                            Foreground="#FF000000"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
							<Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

								<Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border 
                                x:Name="DropDownBorder"
                                Background="White"

                                BorderThickness="1"
                                BorderBrush="LightSkyBlue"/>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsReadOnly" Value="True">
								<Setter TargetName="DropDown" Property="IsEnabled" Value="False"/>
								<Setter TargetName="DropDownBorder" Property="Background" Value="LightCyan"/>
								<Setter Property="Background" Value="LightCyan"/>

								<Setter TargetName="ToggleButton" Property="IsEnabled" Value="False"></Setter>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2"/>
							</Trigger>
							<Trigger Property="IsEditable"  Value="true">
								<Setter Property="IsTabStop" Value="false"/>
								<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
								<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>
